name: CI/CD


on:
  workflow_dispatch:

  pull_request:
    branches:
      - main

  push:
    branches:
      - main

env:
  dockerhubRepo: europe-west3-docker.pkg.dev/prototype-development-samd/prototype-development-samd
  latestImageTag: europe-west3-docker.pkg.dev/prototype-development-samd/prototype-development-samd/latest
  shaImageTag: europe-west3-docker.pkg.dev/prototype-development-samd/prototype-development-samd/${{ github.sha }}
  tag: ${GITHUB_REF#refs/*/}

jobs:

  validate:
    name: Validate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Packages
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Test Lint
        run: npm run test:lint

      - name: Test Units
        run: npm run test

      - name: Test e2e
        run: npm run test:e2e


  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    needs: [ validate ]

    if: github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Packages
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Image
        run: |
          docker build \
          -t "${{ env.shaImageTag }}" \
          -t "${{ env.latestImageTag }}" \
          .

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.7.1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure Docker to use gcloud CLI
        run: gcloud auth configure-docker -q

      - name: Configure Docker Registry
        run: |
          gcloud auth configure-docker \
          europe-west3-docker.pkg.dev

      - name: Push Images
        run: |
          docker push "${{ env.shaImageTag }}"
          docker push "${{ env.latestImageTag }}"


  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    needs: [ build ]

    environment:
      name: Development
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.7.1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Deploy to App Engine
        id: deploy
        uses: 'google-github-actions/deploy-appengine@v0'
        with:
          image_url: ${{ env.shaImageTag }}
