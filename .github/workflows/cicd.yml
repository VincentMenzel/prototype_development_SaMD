name: CI/CD


on:
  workflow_dispatch:

  pull_request:
    branches:
      - main

  push:
    branches:
      - main
env:
  SHA: $(git rev-parse --short "$GITHUB_SHA")
  dockerhubRepo: vincentmenzel/prototype_development_samd
  latestImageTag: "${{ env.dockerhubRepo }}:latest"
  shaImageTag: "${{ env.dockerhubRepo }}:${{ env.SHA }}"
  imageURL: "registry.hub.docker.com/${{ env.shaImageTag }}"
  tag: ${GITHUB_REF#refs/*/}


jobs:

  validate:
    name: Validate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Packages
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Test Lint
        run: npm run test:lint

      - name: Test Units
        run: npm run test

      - name: Test e2e
        run: npm run test:e2e


  build:
    name: Build
    runs-on: ubuntu-latest

    needs: [ validate ]

    if: github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Packages
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ latestImageTag }},${{ shaImageTag }}


  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    needs: [ build ]

    environment:
      name: Development
      url: ${{ steps.deploy.outputs.url }}

    steps:

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.7.1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Deploy to App Engine
        id: deploy
        run: gcloud app deploy --image-url=${{ imageURL }}

      - name: View URL
        run: curl "${{ steps.deploy.outputs.url }}"
